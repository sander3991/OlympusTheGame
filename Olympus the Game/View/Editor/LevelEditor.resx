<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gamePanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>